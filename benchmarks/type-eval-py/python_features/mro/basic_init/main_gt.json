[{"file": "main.py", "line_number": 7, "col_offset": 9, "function": "A.__init__", "variable": "A.a", "type": ["int"], "code": "# A class B inheriting from A is instantiated.\n\n# On initialization since B doesn't have an `__init__` function, the `__init__` function of A is called.\n\n\n\n\n\nclass A:\n\n    def __init__(self):\n\n        self.a = 42\n"}, {"file": "main.py", "line_number": 11, "col_offset": 9, "function": "B.func", "type": ["int"], "code": "# A class B inheriting from A is instantiated.\n\n# On initialization since B doesn't have an `__init__` function, the `__init__` function of A is called.\n\n\n\n\n\nclass A:\n\n    def __init__(self):\n\n        self.a = 42\n\n\n\n\n\nclass B(A):\n\n    def func(self):\n"}, {"file": "main.py", "line_number": 15, "col_offset": 1, "variable": "b", "type": ["B"], "code": "# A class B inheriting from A is instantiated.\n\n# On initialization since B doesn't have an `__init__` function, the `__init__` function of A is called.\n\n\n\n\n\nclass A:\n\n    def __init__(self):\n\n        self.a = 42\n\n\n\n\n\nclass B(A):\n\n    def func(self):\n\n        return self.a\n\n\n\n\n\nb = B()\n"}, {"file": "main.py", "line_number": 16, "col_offset": 1, "variable": "c", "type": ["int"], "code": "# A class B inheriting from A is instantiated.\n\n# On initialization since B doesn't have an `__init__` function, the `__init__` function of A is called.\n\n\n\n\n\nclass A:\n\n    def __init__(self):\n\n        self.a = 42\n\n\n\n\n\nclass B(A):\n\n    def func(self):\n\n        return self.a\n\n\n\n\n\nb = B()\n\nc = b.func()\n"}]