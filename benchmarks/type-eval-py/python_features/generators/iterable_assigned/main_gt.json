[{"file": "main.py", "line_number": 5, "col_offset": 24, "parameter": "max", "function": "Cls.__init__", "type": ["int"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n"}, {"file": "main.py", "line_number": 6, "col_offset": 9, "variable": "Cls.max", "function": "Cls.__init__", "type": ["int"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n"}, {"file": "main.py", "line_number": 8, "col_offset": 9, "function": "Cls.__iter__", "type": ["Cls"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n"}, {"file": "main.py", "line_number": 9, "col_offset": 9, "function": "Cls.__iter__", "variable": "Cls.n", "type": ["int"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n\n        self.n = 0\n"}, {"file": "main.py", "line_number": 12, "col_offset": 9, "function": "Cls.__next__", "type": ["int", "Nonetype"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n\n        self.n = 0\n\n        return self\n\n\n\n    def __next__(self):\n"}, {"file": "main.py", "line_number": 16, "col_offset": 9, "variable": "result", "function": "Cls.__next__", "type": ["int"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n\n        self.n = 0\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.n > self.max:\n\n            raise StopIteration\n\n\n\n        result = 2**self.n\n"}, {"file": "main.py", "line_number": 17, "col_offset": 9, "variable": "Cls.n", "function": "Cls.__next__", "type": ["int"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n\n        self.n = 0\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.n > self.max:\n\n            raise StopIteration\n\n\n\n        result = 2**self.n\n\n        self.n += 1\n"}, {"file": "main.py", "line_number": 21, "col_offset": 1, "variable": "c", "type": ["Cls"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n\n        self.n = 0\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.n > self.max:\n\n            raise StopIteration\n\n\n\n        result = 2**self.n\n\n        self.n += 1\n\n        return result\n\n\n\n\n\nc = Cls(10)\n"}, {"file": "main.py", "line_number": 23, "col_offset": 1, "variable": "output_list", "type": ["list"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n\n        self.n = 0\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.n > self.max:\n\n            raise StopIteration\n\n\n\n        result = 2**self.n\n\n        self.n += 1\n\n        return result\n\n\n\n\n\nc = Cls(10)\n\n\n\noutput_list = [i for i in c]\n"}, {"file": "main.py", "line_number": 23, "col_offset": 22, "variable": "i", "type": ["int"], "code": "# A generator is assigned to a variable and then iterated.\n\n\n\n\n\nclass Cls:\n\n    def __init__(self, max=0):\n\n        self.max = max\n\n\n\n    def __iter__(self):\n\n        self.n = 0\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.n > self.max:\n\n            raise StopIteration\n\n\n\n        result = 2**self.n\n\n        self.n += 1\n\n        return result\n\n\n\n\n\nc = Cls(10)\n\n\n\noutput_list = [i for i in c]\n"}]