[{"file": "main.py", "line_number": 5, "col_offset": 24, "parameter": "n", "function": "func.__init__", "type": ["int"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n"}, {"file": "main.py", "line_number": 6, "col_offset": 9, "parameter": "func.n", "function": "func.__init__", "type": ["int"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n"}, {"file": "main.py", "line_number": 7, "col_offset": 9, "parameter": "func.num", "function": "func.__init__", "type": ["int"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n\n        self.num = 0\n"}, {"file": "main.py", "line_number": 9, "col_offset": 9, "function": "func.__iter__", "type": ["func"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n\n        self.num = 0\n\n\n\n    def __iter__(self):\n"}, {"file": "main.py", "line_number": 12, "col_offset": 9, "function": "func.__next__", "type": ["int", "Nonetype"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n\n        self.num = 0\n\n\n\n    def __iter__(self):\n\n        return self\n\n\n\n    def __next__(self):\n"}, {"file": "main.py", "line_number": 14, "col_offset": 13, "variable": "cur", "function": "func.__next__", "type": ["int"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n\n        self.num = 0\n\n\n\n    def __iter__(self):\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.num < self.n:\n\n            cur, self.num = self.num, self.num + 1\n"}, {"file": "main.py", "line_number": 14, "col_offset": 18, "variable": "func.num", "function": "func.__next__", "type": ["int"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n\n        self.num = 0\n\n\n\n    def __iter__(self):\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.num < self.n:\n\n            cur, self.num = self.num, self.num + 1\n"}, {"file": "main.py", "line_number": 20, "col_offset": 1, "variable": "output_list", "type": ["list"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n\n        self.num = 0\n\n\n\n    def __iter__(self):\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.num < self.n:\n\n            cur, self.num = self.num, self.num + 1\n\n            return cur\n\n        else:\n\n            raise StopIteration()\n\n\n\n\n\noutput_list = [i for i in func(100)]\n"}, {"file": "main.py", "line_number": 20, "col_offset": 22, "variable": "i", "type": ["int"], "code": "# Test that all the methods of a generator are called.\n\n\n\n\n\nclass func:\n\n    def __init__(self, n):\n\n        self.n = n\n\n        self.num = 0\n\n\n\n    def __iter__(self):\n\n        return self\n\n\n\n    def __next__(self):\n\n        if self.num < self.n:\n\n            cur, self.num = self.num, self.num + 1\n\n            return cur\n\n        else:\n\n            raise StopIteration()\n\n\n\n\n\noutput_list = [i for i in func(100)]\n"}]