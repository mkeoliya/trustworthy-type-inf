[{"file": "main.py", "line_number": 4, "col_offset": 5, "function": "dec", "type": ["callable"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n"}, {"file": "main.py", "line_number": 4, "col_offset": 9, "parameter": "f", "function": "dec", "type": ["callable"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n"}, {"file": "main.py", "line_number": 5, "col_offset": 9, "function": "wrapper", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n"}, {"file": "main.py", "line_number": 5, "col_offset": 17, "parameter": "a", "function": "wrapper", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n"}, {"file": "main.py", "line_number": 5, "col_offset": 20, "parameter": "b", "function": "wrapper", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n"}, {"file": "main.py", "line_number": 6, "col_offset": 9, "variable": "result", "function": "wrapper", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n\n        result = f(a, b)\n"}, {"file": "main.py", "line_number": 13, "col_offset": 5, "function": "func", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n\n        result = f(a, b)\n\n        return result\n\n\n\n    return wrapper\n\n\n\n\n\n@dec\n\ndef func(a, b):\n"}, {"file": "main.py", "line_number": 13, "col_offset": 10, "parameter": "a", "function": "func", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n\n        result = f(a, b)\n\n        return result\n\n\n\n    return wrapper\n\n\n\n\n\n@dec\n\ndef func(a, b):\n"}, {"file": "main.py", "line_number": 13, "col_offset": 13, "parameter": "b", "function": "func", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n\n        result = f(a, b)\n\n        return result\n\n\n\n    return wrapper\n\n\n\n\n\n@dec\n\ndef func(a, b):\n"}, {"file": "main.py", "line_number": 17, "col_offset": 1, "variable": "c", "type": ["str"], "code": "# The decorator calls the func assigned to it with parameters.\n\n\n\n\n\ndef dec(f):\n\n    def wrapper(a, b):\n\n        result = f(a, b)\n\n        return result\n\n\n\n    return wrapper\n\n\n\n\n\n@dec\n\ndef func(a, b):\n\n    return a + b\n\n\n\n\n\nc = func(\"Hello\", \"world\")\n"}]